apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: site-controller
spec:
  selector:
    matchLabels:
      app: foxglove-edge-site
  serviceName: "edge-controller"
  replicas: 1
  template:
    metadata:
      labels:
        app: foxglove-edge-site
        {{- range $key, $value := .Values.edgeController.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
        {{- range $key, $value := .Values.edgeController.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      volumes:
        {{ if eq .Values.recordingStorage.provider "local" }}
        - name: storage-root
          persistentVolumeClaim:
            claimName: "{{ .Values.edgeController.storageClaim }}"
        {{ end }}
        - name: index-root
          persistentVolumeClaim:
            claimName: "{{ .Values.edgeController.indexClaim }}"
        - name: cloud-credentials
          secret:
            secretName: gcp-cloud-credential
            optional: true
        {{- if .Values.edgeController.extraVolumes }}
          {{- toYaml .Values.edgeController.extraVolumes| nindent 8 }}
        {{- end }}
      {{- if .Values.edgeController.initContainers }}
      initContainers:
        {{- toYaml .Values.edgeController.initContainers | nindent 10 }}
      {{- end }}
      containers:
        - name: edge-controller
          image: {{ .Values.edgeController.image }}:{{ .Chart.AppVersion }}
          resources:
            requests:
              memory: {{ .Values.edgeController.resources.requests.memory }}
              cpu: {{ .Values.edgeController.resources.requests.cpu }}
            limits:
              memory: {{ .Values.edgeController.resources.limits.memory }}
              cpu: {{ .Values.edgeController.resources.limits.cpu }}
          volumeMounts:
            {{- if .Values.edgeController.extraVolumeMounts }}
              {{- toYaml .Values.edgeController.extraVolumeMounts | nindent 12 }}
            {{- end }}
            {{ if eq .Values.recordingStorage.provider "local" }}
            - mountPath: /data/storage
              name: storage-root
            {{ end }}
            - mountPath: /data/index
              name: index-root
            - mountPath: /secrets
              name: cloud-credentials
          envFrom:
            - secretRef:
                name: cloud-credentials
                optional: true
            - secretRef:
                name: recording-storage-credentials
                optional: true
            - secretRef:
                name: foxglove-site-token
                optional: true
            {{- range $k := .Values.globals.secrets }}
            - secretRef:
                name: {{ $k }}
            {{- end }}
          env:
            {{- if .Values.globals.siteToken }}
            - name: SITE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: foxglove-site
                  key: token
                  optional: false
            {{- end }}
            - name: PRIMARY_SITE_MODE
              value: "{{ .Values.globals.upload.primarySiteMode }}"
            - name: DATABASE_CONNECTION_STRING
              value: sqlite://file:/data/index/foxglove.db?_journal_mode=WAL
            - name: STORAGE_ROOT
              value: /data/storage
            - name: RECORDING_STORAGE_PROVIDER
              value: "{{ .Values.recordingStorage.provider }}"
            - name: RECORDING_STORAGE_BUCKET_NAME
              value: "{{ .Values.recordingStorage.bucketName }}"
            - name: RECORDING_STORAGE_S3_COMPATIBLE_SERVICE_URL
              value: "{{ .Values.recordingStorage.s3CompatibleServiceUrl }}"
            - name: RECORDING_STORAGE_S3_COMPATIBLE_SERVICE_REGION
              value: "{{ .Values.recordingStorage.s3CompatibleServiceRegion }}"
            - name: FOXGLOVE_API_URL
              value: "{{ .Values.globals.foxgloveApiUrl }}"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /secrets/credentials.json
            - name: AWS_SDK_LOAD_CONFIG
              value: "true"
            - name: AWS_REGION
              value: "{{ .Values.globals.aws.region }}"
            - name: INBOX_STORAGE_PROVIDER
              value: "{{ .Values.globals.upload.provider }}"
            - name: INBOX_BUCKET_NAME
              value: "{{ .Values.globals.upload.bucketName }}"
            - name: PROMETHEUS_METRICS_NAMESPACE
              value: "{{ .Values.edgeController.metrics.namespace }}"
            - name: PROMETHEUS_METRICS_SUBSYSTEM
              value: "{{ .Values.edgeController.metrics.subsystem }}"
            {{- range $item := .Values.edgeController.env }}
            - name: {{ $item.name }}
              value: {{ $item.value }}
            {{- end }}
