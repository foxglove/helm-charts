apiVersion: apps/v1
kind: Deployment
metadata:
  name: stream-service
  labels:
    app: stream-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stream-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: stream-service
    spec:
      volumes:
        - name: cloud-credentials
          secret:
            secretName: gcp-cloud-credential
            optional: true
      containers:
        - name: stream-service
          image: us-central1-docker.pkg.dev/foxglove-images/images/stream-service:{{ .Chart.AppVersion }}
          resources:
            requests:
              cpu: {{ .Values.streamService.deployment.resources.requests.cpu }}
              memory: {{ .Values.streamService.deployment.resources.requests.memory }}
            limits:
              cpu: {{ .Values.streamService.deployment.resources.limits.cpu }}
              memory: {{ .Values.streamService.deployment.resources.limits.memory }}
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /secrets
              name: cloud-credentials
          envFrom:
            - secretRef:
                name: cloud-credentials
                optional: true
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /secrets/credential.json
            - name: FOXGLOVE_API_URL
              value: "{{ .Values.globals.foxgloveApiUrl }}"
            - name: PORT
              value: "8080"
            - name: STORAGE_PROVIDER
              value: "{{ .Values.globals.lake.storageProvider }}"
            - name: STORAGE_AZURE_STORAGE_ACCOUNT_NAME
              value: "{{ .Values.globals.azure.storageAccountName }}"
            - name: STORAGE_AZURE_SERVICE_URL
              value: "{{ .Values.globals.azure.serviceUrl }}"
          readinessProbe:
            httpGet:
              path: /liveness
              port: 8080
            periodSeconds: 3
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /liveness
              port: 8080
            periodSeconds: 3
            timeoutSeconds: 1
      terminationGracePeriodSeconds: 30
