globals:
  # Environment Secrets
  # List installed Secrets in the foxglove namespace that will be loaded as
  # environment variables. A single Secret can contain multiple key-value pairs.
  secrets:
  ## E.g.:
  ## - arbitrary-secret
  ## - another-secret

  foxgloveApiUrl: https://api.foxglove.dev

  ## Supported storageProvider values are: `google_cloud`, `aws`, `azure`, or `s3_compatible`.
  ## If `azure` is used, then the `@azure.storageAccountName` and `@azure.serviceUrl` values
  ## are required. If `aws` is used, then the `@aws.region` value is required.
  lake:
    storageProvider: google_cloud
    bucketName: foxglove-lake
  inbox:
    storageProvider: google_cloud
    bucketName: foxglove-inbox
  
  ## Configure an http/https egress proxy if your environment requires outgoing connections to be proxied. Set `enabled` to `true` and appropriate values for `httpProxy`, `httpsProxy` and `noProxy`.
  proxy:
    enabled: false
    httpProxy: ""
    httpsProxy: ""
    noProxy: ""

  azure:
    storageAccountName: ""
    ## For example: https://<resourcegroup>.blob.core.windows.net
    serviceUrl: ""

  aws:
    ## For example: us-east-1
    region: ""

ingress:
  ## If you are configuring your own ingress controller, set this to 'false'
  enabled: true
  className:
  annotations: {}
  # set the host value for an ingress
  host:
  ## This section is only required if TLS is to be enabled for this ingress
  tls:
    ## E.g.:
    ## - hosts:
    ##   - www.example.com
    ##   secretName: ingress-tls-csi

inboxListener:
  deployment:
    replicas: 1
    resources:
      requests:
        cpu: 1000m
        memory: 4Gi
      limits:
        cpu: 1000m
        memory: 4Gi
    podLabels: {}
    podAnnotations: {}
    nodeSelectors: {}
    metrics:
      namespace: ""
      subsystem: ""
    env:
      []
      # AWS_COPY_WORKER_COUNT: adjust the number of concurrent workers for
      # copying s3 objects (default: 10)
      # - name: AWS_COPY_WORKER_COUNT
      #   value: 10
      #
      # AWS_COPY_PART_SIZE_BYTES: size in bytes of multipart copy batch part
      # sizes (default 100MB)
      # - name: AWS_COPY_PART_SIZE_BYTES
      #   value: 104857600
      # AWS_WRITER_PART_SIZE_BYTES: size in bytes of multipart write part
      # sizes. This influences the size of a buffer created per-topic in the
      # inbox listener.
      # - name: AWS_WRITER_PART_SIZE_BYTES
      #   value: 5242880
      # SCRATCH_BUFFER_CAPACITY_BYTES: The maximum buffer size that will be used when reading
      # indexed MCAP. During processing, some file data is read into memory before being written to
      # the lake. If the message timestamps in a file are highly out-of-order, this limit may be
      # exceeded. If the limit is exceeded, local disk or lake storage is used instead of memory.
      # - name: SCRATCH_BUFFER_CAPACITY_BYTES
      #   value: "1073741824"
    localScratch:
      # If your primary site is expected to process unindexed MCAP or ROS 1 BAG files, consider
      # configuring your inbox listener deployment with local scratch storage. We recommend
      # allocating at least three times as much capacity as your largest expected input file size.
      enabled: false
      capacityBytes: "107374182400"

    serviceAccount:
      enabled: false
      annotations: {}
      ## Service accounts are not required by default. You can use them on AWS to allow
      ## the deployment assume an IAM role.
      ## E.g:
      ## enabled: true
      ## annotations:
      ##   eks.amazonaws.com/role-arn: arn:aws:iam::xxxxxxxxxxxx:role/foxglove-inbox-listener-sa-role

  # To enable the autoscaling built into this chart, you must install KEDA first
  # helm repo add kedacore https://kedacore.github.io/charts
  # helm repo update
  # helm install keda kedacore/keda --namespace keda --create-namespace
  autoscaling:
    enabled: false
    # minReplicas can be raised if time to start processing incoming files is slower than desired
    # 1 is a good default for almost all use-cases
    minReplicas: 1
    # maxReplicas can be raised if you constantly have a very large number of incoming files to process
    # it should be set to a value that allows your site to process incoming files at peak load
    maxReplicas: 10
    # This value, supplied as duration string (https://pkg.go.dev/time#ParseDuration) determines how long a pod will
    # wait for new work items. It is unlikely that this value should be changed. The value should only be set when
    # using this auto-scaling.
    maxWaitForWork: "30s"
    # how many successful jobs to keep in Kubernetes history, this is a safe default, but may be lowered if
    # desired.
    successfulJobsHistoryLimit: 50
    # how many failed jobs to keep in Kubernetes history, this is a safe default, but may be lowered if desired.
    failedJobsHistoryLimit: 100
    # how often to poll the autoscaling metric in seconds, provided as an integer. this is a safe default.
    pollingInterval: 30

streamService:
  service:
    annotations: {}
  deployment:
    replicas: 1
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
      limits:
        cpu: 1000m
        memory: 2Gi
    podLabels: {}
    podAnnotations: {}
    nodeSelectors: {}
    metrics:
      namespace: ""
      subsystem: ""
    env: []
    serviceAccount:
      enabled: false
      annotations: {}
      ## Service accounts are not required by default. You can use them on AWS to allow
      ## the deployment assume an IAM role.
      ## E.g:
      ## enabled: true
      ## annotations:
      ##   eks.amazonaws.com/role-arn: arn:aws:iam::xxxxxxxxxxxx:role/foxglove-stream-service-sa-role

siteController:
  service:
    annotations: {}
  deployment:
    resources:
      requests:
        cpu: 250m
        memory: 250Mi
      limits:
        cpu: 250m
        memory: 250Mi
    podLabels: {}
    podAnnotations: {}
    nodeSelectors: {}
    metrics:
      namespace: ""
      subsystem: ""
    env: []

garbageCollector:
  schedule: "*/10 * * * *" # every 10 minutes
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  deployment:
    env: []
    nodeSelectors: {}
    serviceAccount:
      enabled: false
      annotations: {}
      ## Service accounts are not required by default. You can use them on AWS to allow
      ## the deployment assume an IAM role.
      ## E.g:
      ## enabled: true
      ## annotations:
      ##   eks.amazonaws.com/role-arn: arn:aws:iam::xxxxxxxxxxxx:role/foxglove-garbage-collector-sa-role
